Window {
    backgroundImage: 'content/images/loading.withoutbar.png'
}

/*
    Generic Elements and Reusable Classes
*/
.Window {
    backgroundImage: 'content/images/bg.png'
}
WebView {
    backgroundColor: 'transparent'
}
.TornEdge {
    image: 'content/images/tornedge.png',
    width: 320,
    height: 6
}

/*
    Notifications
*/
#Notification {
    timeout: 3000,
    fadeDuration: 500,
    height: 30,
    width: 250,
    top: 60,
    borderRadius: 10,
    touchEnabled: false,
    backgroundColor: 'transparent',
    backgroundImage: null,
    orientationModes : [
        Titanium.UI.PORTRAIT,
        Titanium.UI.UPSIDE_PORTRAIT,
        Titanium.UI.LANDSCAPE_LEFT,
        Titanium.UI.LANDSCAPE_RIGHT,
    ]
}
#NotificationView {
    height: 30,
    opacity: 0.7,
    width: 250,
    borderRadius: 10,
    backgroundColor: '#000',
    touchEnabled: false
}
#NotificationLabel {
    color: '#fff',
    width: 250,
    height: 'auto',
    font: {
        fontFamily: 'Helvetica Neue',
        fontSize: 13
    },
    textAlign: 'center'
}

/*
    Title Bar View
*/
.HomeButton {
    backgroundImage: 'content/images/bars/9dots.png',
    width: 41,
    height: 30
}
.BackButton {
    backgroundImage: 'content/images/bars/back.png',
    width: 54,
    height: 30
}
.RefreshButton {
    backgroundImage: 'content/images/bars/refresh.png',
    width: 41,
    height: 30
}
.AddCommentButton {
    backgroundImage: 'content/images/bars/comment.png',
    width: 41,
    height: 30
}
.TitleBar {
    backgroundImage: 'content/images/bars/top.png',
    top: 0, right: 0, left: 0, height: 44
}
.TitleBarTitle {
    color: '#fff',
    font: { fontWeight: 'bold', fontSize: 20 },
    textAlign: 'center',
    shadowColor: "#000",
	shadowOffset: {x:0, y:-1}
}

/*
    Details View
*/
.DetailsTornEdge {
    top: 63
}
.DetailsContainer {
    top: 0, right: 0, bottom: 0, left: 0
}
.DetailsTitleContainer {
    top: 0, right: 0, left: 0,
    height: 63,
    backgroundColor: '#fff',
    layout: 'vertical'
}
.DetailsTitle {
    top: 12, left: 10, right: 10,
    height: 19,
    font: { fontWeight: 'bold', fontSize: 19 },
    color: '#b94646',
    textAlign: 'center'
}
.DetailsSubtitle {
    top: 1, left: 10, right: 10,
    height: 'auto',
    font: { fontSize: 14 },
    color: '#4674b9',
    textAlign: 'center'
}
.DetailsBody {
    top: 63
}

/*
    Table
*/
.Table {
    backgroundColor: 'transparent',
    borderColor: 'transparent',
    borderWidth: 0,
    footerView: Ti.UI.createView({ height: 1, backgroundColor: '#fff' })
}
.Row {
    backgroundColor: '#fff',
    selectedBackgroundColor: '#ddd',
    height: 60,
    borderColor: 'transparent',
    borderWidth: 0
}
.RowTitle {
    top: 14, right: 30, left: 10,
    height: 14,
    font: { fontWeight: 'bold', fontSize: 14 },
    color: '#4674b9'
}
.RowSubtitle {
    top: 32, right: 30, left: 10,
    height: 13,
    font: { fontSize: 13 },
    color: '#b94646'
}
.RowDetailsArrow {
    right: 10,
    width: 10, height: 14,
    image: 'content/images/arrowright.png'
}

/*
    Pull to Refresh
*/
.PullToRefresh {
    height: 0,
    backgroundColor: 'transparent'
}
.PullToRefreshArrow {
    top: -30, left: 20,
    width: 10, height: 14,
    image: 'content/images/arrowright.png'
}
.PullToRefreshText {
    left: 55, bottom: 30,
	width: 200, height: 'auto',
	color: '#576c89',
	textAlign: 'center',
	font: { fontSize:13, fontWeight:'bold' },
	shadowColor: '#fff',
	shadowOffset: { x:0, y:1 }
}
.PullToRefreshLastUpdated {
    left: 55, bottom: 15,
	width: 200, height: 'auto',
	color: '#576c89',
	textAlign: 'center',
	font: { fontSize: 12 },
	shadowColor: '#fff',
	shadowOffset: { x:0, y:1 }
}
.PullToRefreshIndicator {
    left: 20, bottom: 13,
    width: 30, height: 30
}

/*
    Animations
*/
Animation {
    duration: 300,
    curve: Ti.UI.ANIMATION_CURVE_EASE_IN_OUT
}
.FadeIn {
    opacity: 1
}
.FadeOut {
    opacity: 0
}
.PopOut {
    transform: Ti.UI.create2DMatrix(),
    opacity: 1
}
.PopIn {
    transform: Ti.UI.create2DMatrix().scale(0.1, 0.1),
    opacity: 0
}
.SlideIn {
    transform: Ti.UI.create2DMatrix(),
    opacity: 1
}
.SlideOut {
    transform: Ti.UI.create2DMatrix().translate(320, 0),
    opacity: 0
}